stages:
  - install
  - build
  - build_docker
  - deploy

Npm ci:
  stage: install
  image: node:18
  script:
    - cd frontend
    - npm ci
  cache:
    policy: push
    key: ${CI_COMMIT_REF_SLUG}-modules
    paths:
      - frontend/node_modules

Build:
  stage: build
  image: node:18
  script:
    - cd frontend
    - npm run build
  cache:
    - key: ${CI_COMMIT_REF_SLUG}-modules
      policy: pull
      paths:
        - frontend/node_modules
    - key: ${CI_COMMIT_REF_SLUG}-build
      policy: push
      paths:
        - frontend/build

Test:
  stage: build
  image: node:18
  script:
    - cd frontend
    - npm run test
  cache:
    policy: pull
    key: ${CI_COMMIT_REF_SLUG}-modules
    paths:
      - frontend/node_modules

Build docker:
  stage: build_docker
  image: docker:24.0.5-cli
  services:
    - name: docker:24.0.5-dind
      command: ["--tls=false"]
      variables:
        DOCKER_TLS_CERTDIR: ""
  variables:
    IMAGE_NAME: aspiregray/result-frontend
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  only:
    - main
  when: manual
  before_script:
    - apk add --no-cache curl
    - echo "Waiting for Docker daemon to start on docker:2375..."
    - for i in $(seq 1 15); do
        if curl -s docker:2375/_ping | grep -q OK; then
          echo "âœ… Docker daemon is ready!";
          break;
        fi;
        echo "Waiting... ($i/15)";
        sleep 2;
      done
  script:
    - docker login -u aspiregray -p "${DOCKER_PWD}"
    - docker build -f frontend.Dockerfile -t "${IMAGE_NAME}" .
    - docker push "${IMAGE_NAME}"
  cache:
    key: ${CI_COMMIT_REF_SLUG}-build
    policy: pull
    paths:
      - frontend/build

Deploy:
  stage: deploy
  image: ringcentral/sshpass
  only:
    - main
  when: manual
  variables:
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
  script:
    - echo "ðŸš€ Deploy started..."
    - sshpass -p "${SSH_PASS}" ssh -o StrictHostKeyChecking=no "${SSH_USER}@${SSH_HOST}" "
        cd 8.FrontOps_1.Task &&
        git pull &&
        docker compose pull nginx &&
        docker stop nginx || true &&
        docker compose up -d nginx
      "
